{"ast":null,"code":"var _jsxFileName = \"/Users/matthew/Documents/GitHub/_Node/react-express-redux-poc/frontend/src/PrivateRoute.js\";\nimport React from \"react\";\nimport withRedux from \"./Redux/containers\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  state,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => state.isAccountVerified ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/\",\n      state: {\n        message: \"Not Authorized!\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));\n\nexport default withRedux(PrivateRoute);","map":{"version":3,"sources":["/Users/matthew/Documents/GitHub/_Node/react-express-redux-poc/frontend/src/PrivateRoute.js"],"names":["React","withRedux","Route","Redirect","PrivateRoute","component","Component","state","rest","props","isAccountVerified","pathname","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,kBACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXF,KAAK,CAACG,iBAAN,gBACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,gBAGE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AAAEE,MAAAA,QAAQ,EAAE,GAAZ;AAAiBJ,MAAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX;AAAxB,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAeA,eAAeX,SAAS,CAACG,YAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport withRedux from \"./Redux/containers\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, state, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      state.isAccountVerified ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: \"/\", state: { message: \"Not Authorized!\" } }}\n        />\n      )\n    }\n  />\n);\n\nexport default withRedux(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}